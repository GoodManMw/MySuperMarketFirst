package com.mysupermarket.pojo;

import java.util.ArrayList;
import java.util.List;

public class UserAccountExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public UserAccountExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUaUsernameIsNull() {
            addCriterion("ua_username is null");
            return (Criteria) this;
        }

        public Criteria andUaUsernameIsNotNull() {
            addCriterion("ua_username is not null");
            return (Criteria) this;
        }

        public Criteria andUaUsernameEqualTo(Integer value) {
            addCriterion("ua_username =", value, "uaUsername");
            return (Criteria) this;
        }

        public Criteria andUaUsernameNotEqualTo(Integer value) {
            addCriterion("ua_username <>", value, "uaUsername");
            return (Criteria) this;
        }

        public Criteria andUaUsernameGreaterThan(Integer value) {
            addCriterion("ua_username >", value, "uaUsername");
            return (Criteria) this;
        }

        public Criteria andUaUsernameGreaterThanOrEqualTo(Integer value) {
            addCriterion("ua_username >=", value, "uaUsername");
            return (Criteria) this;
        }

        public Criteria andUaUsernameLessThan(Integer value) {
            addCriterion("ua_username <", value, "uaUsername");
            return (Criteria) this;
        }

        public Criteria andUaUsernameLessThanOrEqualTo(Integer value) {
            addCriterion("ua_username <=", value, "uaUsername");
            return (Criteria) this;
        }

        public Criteria andUaUsernameIn(List<Integer> values) {
            addCriterion("ua_username in", values, "uaUsername");
            return (Criteria) this;
        }

        public Criteria andUaUsernameNotIn(List<Integer> values) {
            addCriterion("ua_username not in", values, "uaUsername");
            return (Criteria) this;
        }

        public Criteria andUaUsernameBetween(Integer value1, Integer value2) {
            addCriterion("ua_username between", value1, value2, "uaUsername");
            return (Criteria) this;
        }

        public Criteria andUaUsernameNotBetween(Integer value1, Integer value2) {
            addCriterion("ua_username not between", value1, value2, "uaUsername");
            return (Criteria) this;
        }

        public Criteria andUaPasswordIsNull() {
            addCriterion("ua_password is null");
            return (Criteria) this;
        }

        public Criteria andUaPasswordIsNotNull() {
            addCriterion("ua_password is not null");
            return (Criteria) this;
        }

        public Criteria andUaPasswordEqualTo(String value) {
            addCriterion("ua_password =", value, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordNotEqualTo(String value) {
            addCriterion("ua_password <>", value, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordGreaterThan(String value) {
            addCriterion("ua_password >", value, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("ua_password >=", value, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordLessThan(String value) {
            addCriterion("ua_password <", value, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordLessThanOrEqualTo(String value) {
            addCriterion("ua_password <=", value, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordLike(String value) {
            addCriterion("ua_password like", value, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordNotLike(String value) {
            addCriterion("ua_password not like", value, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordIn(List<String> values) {
            addCriterion("ua_password in", values, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordNotIn(List<String> values) {
            addCriterion("ua_password not in", values, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordBetween(String value1, String value2) {
            addCriterion("ua_password between", value1, value2, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaPasswordNotBetween(String value1, String value2) {
            addCriterion("ua_password not between", value1, value2, "uaPassword");
            return (Criteria) this;
        }

        public Criteria andUaEmailIsNull() {
            addCriterion("ua_email is null");
            return (Criteria) this;
        }

        public Criteria andUaEmailIsNotNull() {
            addCriterion("ua_email is not null");
            return (Criteria) this;
        }

        public Criteria andUaEmailEqualTo(String value) {
            addCriterion("ua_email =", value, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailNotEqualTo(String value) {
            addCriterion("ua_email <>", value, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailGreaterThan(String value) {
            addCriterion("ua_email >", value, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailGreaterThanOrEqualTo(String value) {
            addCriterion("ua_email >=", value, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailLessThan(String value) {
            addCriterion("ua_email <", value, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailLessThanOrEqualTo(String value) {
            addCriterion("ua_email <=", value, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailLike(String value) {
            addCriterion("ua_email like", value, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailNotLike(String value) {
            addCriterion("ua_email not like", value, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailIn(List<String> values) {
            addCriterion("ua_email in", values, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailNotIn(List<String> values) {
            addCriterion("ua_email not in", values, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailBetween(String value1, String value2) {
            addCriterion("ua_email between", value1, value2, "uaEmail");
            return (Criteria) this;
        }

        public Criteria andUaEmailNotBetween(String value1, String value2) {
            addCriterion("ua_email not between", value1, value2, "uaEmail");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_account
     *
     * @mbggenerated do_not_delete_during_merge Sun Aug 06 09:44:18 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_account
     *
     * @mbggenerated Sun Aug 06 09:44:18 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}